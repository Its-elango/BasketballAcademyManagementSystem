@model BasketballAcademy.Models.Admission

@{
    ViewBag.Title = "UpdatePlayer";
    Layout = "~/Views/Shared/UserLayoutPage.cshtml";
}
<script src="~/Scripts/Validation.js"></script>
<link href="~/Content/ErrorStyle.css" rel="stylesheet" />
<link href="~/Content/UpdatePlayer.css" rel="stylesheet" />
<script src="~/Scripts/PreventBack.js"></script>
    @using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="row mx-4 my-3" id="EnrollForm">
    <h4 class="text-center"> Update your profile</h4>

  <h3 class="text-center text-success">@ViewBag.Success</h3>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div class="col-md-6 col-sm-12 ">
        <div class="form-group " style="display: none;">
            @Html.LabelFor(model => model.Id, "ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FullName, "Name", new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @id = "name", @onfocusout = "validatename()" } })
                <span id="nameError"></span>
            </div>
        </div>


        <div class="form-group">
            <label for="DateOfBirth" class="control-label "> Date of birth</label>
            <div class="col-md-6">
                <input type="date" id="date" name="DateOfBirth" class="form-control" onfocusout="validatedate()" onchange="CalcluateAge()">
                <span id="DateError"> </span>
            </div>
        </div>

        <div class="form-group">
            <label for="Age" class="control-label "> Age</label>
            <div class="col-md-10">
                <input type="text" id="age" name="Age" class="form-control">
                <span id="ageError"> </span>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label my-3"> Gender</label>
            <label class="radio-inline">
                <input type="radio" id="GenderMale" value="Male" name="Gender" class=""> Male
            </label>
            <label class="radio-inline">
                <input type="radio" id="GenderFemale" value="Female" name="Gender" class=""> Female
            </label>
            <label class="radio-inline">
                <input type="radio" id="GenderOther" value="Other" name="Gender" class=""> Other
            </label>
            <span class="text-danger"> </span>
        </div>

        <div class="form-group">
            <label for="PhoneNumber" class="control-label "> Phone number</label>
            <div class="col-md-10">
                <input type="text" id="phone" name="PhoneNumber" class="form-control" onfocusout="validatePhone()">
                <span id="phoneError"> </span>
            </div>
        </div>


    </div>
    <div class="col-md-6 col-sm-12">

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "email", @readonly = "readonly" } })
                <span id="emailError"></span>
            </div>
        </div>


        @*<label for="Email" class="control-label "> Email</label>
                <div class="col-md-10">
                    <input type="text" id="email" name="Email" class="form-control" onfocusout="validateEmail()">
                    <span id="emailError"> </span>
                </div>
            </div>*@

        <div class="form-group">
            <label for="ParentGuardianName" class="control-label "> Parent/Guardian name</label>
            <div class="col-md-10">
                <input type="text" id="pgname" name="ParentGuardianName" class="form-control" onfocusout="validatepgname()">
                <span id="pgnameError"> </span>
            </div>
        </div>

        <div class="form-group">
            <label for="ParentGuardianPhone" class="control-label "> Parent/Guardian phone</label>
            <div class="col-md-10">
                <input type="text" id="pgphone" name="ParentGuardianPhone" class="form-control" onfocusout="validatepgPhone()">
                <span id="pgphoneError"> </span>
            </div>
        </div>

        <div class="form-group">
            <label for="photo" class="control-label "> Photo</label>
            <div class="col-md-10">
                <input type="hidden" id="Hidden" name="photo">
                <input type="file" id="file" name="file" accept=".jpg,.jpeg,.png">
            </div>
        </div>
    </div>


    <div class="form-group my-3">
        <div class="col-12 text-center">
            <input type="submit" value="Update" class="btn btn-primary" />
        </div>
    </div>
</div>
}
    <script >
    document.getElementById("file").addEventListener("change", function (event) {
        var file = event.target.files[0];
        var reader = new FileReader();
        reader.onload = function (e) {
            var base64String = e.target.result.split(",")[1];
            document.getElementById("Hidden").value = base64String;
        };
        reader.readAsDataURL(file);
    });

    function CalcluateAge() {
        var userinput = document.getElementById("date").value;
        var dob = new Date(userinput);
        var today = new Date();
        var result_age = today.getFullYear() - dob.getFullYear();
        var display = document.getElementById('age');
        display .value = result_age;
        return true;
    }

    const today = new Date().toISOString().split('T')[0];
    document.getElementById('date').setAttribute('max', today);

    </script>
