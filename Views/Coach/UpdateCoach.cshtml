@model BasketballAcademy.Models.Coach

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/CoachLayoutPage.cshtml";
}
<script src="~/Scripts/Validation.js"></script>
<link href="~/Content/ErrorStyle.css" rel="stylesheet" />
<link href="~/Content/UpdateCoach.css" rel="stylesheet" />
<script src="~/Scripts/PreventBack.js"></script>

@using (Html.BeginForm("UpdateCoach", "Coach", FormMethod.Post, new { @onsubmit = "return validateUpdateCoach();" }))
{
    @Html.AntiForgeryToken()

<div class=" mx-5 row" id="EnrollForm">

    <h2 class="text-center my-3">Update coach profile</h2>

    <h4 class="text-success text-center fw-bold">@ViewBag.Message</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div id="side" class="col-md-6">
        <div class="col-md-6" style="display: none;">
            @Html.LabelFor(model => model.Id)
            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label for="FullName" class="control-label ">Name</label>
            <div class="col-md-6">
                <input type="text" id="name" name="FullName" value="@ViewBag.Name"  class="form-control" onfocusout="validatename()">
                <span id="nameError"></span>
            </div>
        </div>

        <div class="form-group">
            <label for="DateOfBirth" class="control-label ">Date of birth</label>
            <div class="col-md-6">
                <input type="date" id="date" name="DateOfBirth" class="form-control" onfocusout="validatedate()" onchange="CalcluateAge()">
                <span id="DateError"></span>
            </div>
        </div>

        <div class="form-group">
            <label for="Age" class="control-label ">Age</label>
            <div class="col-md-6">
                <input type="text" id="Age" name="Age" class="form-control">
            </div>
        </div>

        <div class="form-group my-3">
            <label for="Gender" class="control-label">Gender</label>
            <label class="radio-inline">
                <input type="radio" name="Gender" value="Male" id="genderMale" onfocusout="validategender()"> Male
            </label>
            <label class="radio-inline">
                <input type="radio" name="Gender" value="Female" id="genderFemale" onfocusout="validategender()"> Female
            </label>
            <label class="radio-inline">
                <input type="radio" name="Gender" value="Other" id="genderOther" onfocusout="validategender()"> Other
            </label><br />
            <span id="genderError"></span>
        </div>

        <div class="form-group">
            <label for="Address" class="control-label ">Address</label>
            <div class="col-md-6">
                <input type="text" id="address" name="Address" class="form-control" onfocusout="validateAddress()">
                <span id="addressError"></span>
            </div>
        </div>
        <div class="">
            <label for="PhoneNumber" class="control-label ">Phone number</label>
            <div class="col-md-6">
                <input type="text" id="phone" name="PhoneNumber" class="form-control" onfocusout="validatePhone()">
                <span id="phoneError"></span>
            </div>
        </div>
    </div>


    <div id="main" class="col-md-6">
        <div class="">
            <label for="Email" class="control-label ">Email</label>
            <div class="col-md-6">
                <input type="text" id="email" name="Email" value=" @ViewBag.Email" class="form-control" onfocusout="validateEmail()" readonly>
                <span id="emailError"></span>
            </div>
        </div>

        <div class="">
            <label for="Experience" class="control-label ">Experience</label>
            <div class="col-md-6">
                <input type="text" id="experience" name="experience" class="form-control" onfocusout="validateexperience()">
                <span id="experienceError"></span>
            </div>
        </div>

        <div class="">
            <label for="PrimarySkill" class="control-label ">Primary skill</label>
            <div class="col-md-6">
                <input type="text" id="skill" name="PrimarySkill" class="form-control" onfocusout="validateSkill()">
                <span id="skillError"></span>
            </div>
        </div>

        <div class="my-3">
            <label for="photo" class="control-label ">Photo</label>
            <div class="col-md-6">
                <input type="hidden" id="Hidden" name="photo">
                <input type="file" id="file" name="file" accept=".jpg,.jpeg,.png">

            </div>
        </div>

        <div class="">
            <label for="idproof" class="control-label ">Upload ID proof</label>
            <div class="col-md-6">
                <input type="hidden" id="Hidden1" name="idproof">
                <input type="file" id="file1" name="file" accept=".pdf">
            </div>
        </div>

        <div class="my-2">
            <label for="CertificateProof" class="control-label ">Upload certificate</label>
            <div class="col-md-6">
                <input type="hidden" id="Hidden2" name="CertificateProof">
                <input type="file" id="file2" name="file" accept=".pdf">
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-12 text-center my-3">
            <input type="submit" value="Update" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<script>
    document.getElementById("file").addEventListener("change", function (event) {
        var file = event.target.files[0];
        var reader = new FileReader();
        reader.onload = function (e) {
            var base64String = e.target.result.split(",")[1];
            document.getElementById("Hidden").value = base64String;
        };
        reader.readAsDataURL(file);
    });



    document.getElementById("file1").addEventListener("change", function (event) {
        var file = event.target.files[0];
        var reader = new FileReader();
        reader.onload = function (e) {
            var base64String = e.target.result.split(",")[1];
            document.getElementById("Hidden1").value = base64String;
        };
        reader.readAsDataURL(file);
    });
    document.getElementById("file2").addEventListener("change", function (event) {
        var file = event.target.files[0];
        var reader = new FileReader();
        reader.onload = function (e) {
            var base64String = e.target.result.split(",")[1];
            document.getElementById("Hidden2").value = base64String;
        };
        reader.readAsDataURL(file);
    });


    function CalcluateAge() {
        var userinput = document.getElementById("date").value;

        var dob = new Date(userinput);
        var today = new Date();
        var result_age = today.getFullYear() - dob.getFullYear();
        var display = document.getElementById('Age');
        display.value = result_age;
        return true;
    }

    const today = new Date().toISOString().split('T')[0];
    document.getElementById('date').setAttribute('max', today);
</script>
