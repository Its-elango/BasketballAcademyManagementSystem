@model BasketballAcademy.Models.Events

@{
    ViewBag.Title = "AddEvents";
    Layout = "~/Views/Shared/AdminLayoutPage.cshtml";
}
<link href="~/Content/AddEvent.css" rel="stylesheet" />
<link href="~/Content/ErrorStyle.css" rel="stylesheet" />
<script src="~/Scripts/Validation.js"></script>
<script src="~/Scripts/PreventBack.js"></script>


@using (Html.BeginForm("AddEvents", "Event", FormMethod.Post, new { @onsubmit = "return validateAddEvent();" }))

{
    @Html.AntiForgeryToken()

<div class="form-horizontal row my-3" id="EventForm">
    <h2 class="text-center ">Add event</h2>
    <h4 class="text-center text-success fw-bold">@ViewBag.Message</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col-md-4 my-3">

        <div class="form-group">
            <label for="EventName" class="control-label ">Event name</label>
            <div class="col-md-10">
                <input type="text" id="name" name="EventName" class="form-control" onfocusout="validatename()">
                <span id="nameError"></span>
            </div>
        </div>


        <div class="form-group">
            <label for="EventDate" class="control-label ">Date:</label>
            <div class="col-md-10">
                <input type="date" id="date" name="EventDate" class="form-control" onfocusout="validatedate()">
                <span id="DateError"></span>
            </div>
        </div>

        <div class="form-group">
            <label for="DropdownList" class="control-label ">Incharge:</label>
            <div class="col-md-10">
                <select id="Dropdown" name="Incharge" class="form-control" onfocusout="validatecoach()">
                    <option value="">--Select incharge--</option>
                    <option value="James">James</option>
                    <option value="Metilda">Metilda</option>
                    <option value="Clara">Clara</option>
                </select>
                <span id="DropdownError"></span>
            </div>
        </div>

        @*<div class="form-group">
                @Html.Label("CoachName", "Coach:", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SelectedCoach", ViewBag.CoachNames as SelectList, "-- Select coach --", new { @class = "form-control", id = "coachListDropdown" })
                    <div id="coachList-validation-message" class="text-danger"></div>
                </div>
            </div>*@




        <div class="form-group">
            <label for="EventTime" class="control-label ">Time:</label>
            <div class="col-md-10">
                <input type="time" id="time" name="EventTime" class="form-control" onfocusout="validatetime()">
                <span id="TimeError"></span>
            </div>
        </div>

        <div class="form-group">
            <label for="Venue" class="control-label ">Venue:</label>
            <div class="col-md-10">
                <input type="text" id="venue" name="Venue" class="form-control" onfocusout="validateVenue()">
                <span id="VenueError"></span>
            </div>
        </div>
    </div>
    <div class="col-md-4 my-3">
        <div class="form-group">
            <label for="Details" class="control-label ">Details:</label>
            <div class="col-md-10">
                <input type="text" id="details" name="Details" class="form-control" onblur="validatedetails()">
                <span id="detailsError"></span>
            </div>
        </div>


        <div class="form-group">
            <label class="control-label my-3 ageGroup">Age Group:</label>
            <input type="checkbox" name="AgeGroup" value="Under 12" onchange="updateSelectedAgeGroups()"> Under 12
            <input type="checkbox" name="AgeGroup" value="12 to 18" onchange="updateSelectedAgeGroups()"> 12 to 18
            <span id="ageError"></span>
        </div>

        <input type="hidden" id="SelectedAgeGroups" value="">

        <div class="form-group">
            <label for="PrizeDetails" class="control-label">Prize Details:</label>
            <div class="col-md-10">
                <input type="text" id="prize" name="PrizeDetails" class="form-control" onblur="validateprize()">
                <span id="prizeError"></span>
            </div>
        </div>


        <div class="form-group">
            <label for="Contact" class="control-label ">Contact:</label>
            <div class="col-md-10">
                <input type="text" id="phone" name="Contact" class="form-control" onfocusout="validatePhone()">
                <span id="phoneError"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventImage, "Event poster", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.EventImage, new { id = "Hidden" })
                <input class="form-control " type="file" id="file" name="file" accept=".jpg">
            </div>
        </div>


    </div>
    <div class="form-group text-center my-3">
        <div class=" col-md-12">
            <input type="submit" value="Add event" class="btn btn-outline-success mx-2" />
            <a href="@Url.Action("ViewEvents")" class="btn btn-outline-primary">Back to List</a>
        </div>
    </div>
</div>
}

<script>
    document.getElementById("file").addEventListener("change", function (event) {
        var file = event.target.files[0];
        var reader = new FileReader();
        reader.onload = function (e) {
            var base64String = e.target.result.split(",")[1];
            document.getElementById("Hidden").value = base64String;
        };
        reader.readAsDataURL(file);
    });


    // Get today's date in the "yyyy-MM-dd" format
    const today = new Date().toISOString().split('T')[0];
    // Set the minimum date attribute to today's date
    document.getElementById('date').setAttribute('min', today);
</script>
